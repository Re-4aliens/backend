plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version "3.3.2"
}

group = 'com.aliens'
version = '0.0.1-SNAPSHOT'

configurations {
    asciidoctorExtensions
}

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //SPRING_REST_DOCS
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //VALIDATION
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //MYSQL
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'com.h2database:h2'

    //AWS S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    testImplementation 'io.findify:s3mock_2.13:0.2.6'

    //SMTP
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //WEBSOCKET
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    //MONGO_DB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    //FCM
    implementation 'com.google.firebase:firebase-admin:9.2.0'

    //QUERY_DSL
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    implementation "com.querydsl:querydsl-core:5.0.0"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    //THYMELEAF
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // LOGBACK
    implementation 'ch.qos.logback.contrib:logback-json-classic:0.1.5'
    implementation 'ch.qos.logback.contrib:logback-jackson:0.1.5'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.3'

    // AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'
}

def querydslDir = "build/generated/querydsl"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}


ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
    configurations 'asciidoctorExtensions'
}

bootJar {
    dependsOn asciidoctor
    copy {
        from ("${asciidoctor.outputDir}")
        into 'src/main/resources/static/docs'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}